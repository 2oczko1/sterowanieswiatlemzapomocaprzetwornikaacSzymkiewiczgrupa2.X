

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Dec 06 17:57:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F74
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F74 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107                           
   108                           	psect	idataBANK0
   109     0091                     __pidataBANK0:
   110                           
   111                           ;initializer for _portd_mask
   112     0091  3401               	retlw	1
   113     001E                     _ADRES	set	30
   114     000C                     _PIR1bits	set	12
   115     000B                     _INTCONbits	set	11
   116     001F                     _ADCON0bits	set	31
   117     001F                     _ADCON0	set	31
   118     0008                     _PORTD	set	8
   119     0008                     _PORTDbits	set	8
   120     008C                     _PIE1bits	set	140
   121     009F                     _ADCON1	set	159
   122     0088                     _TRISD	set	136
   123                           
   124                           	psect	cinit
   125     000F                     start_initialization:	
   126                           ; #config settings
   127                           
   128     000F                     __initialization:
   129                           
   130                           ; Initialize objects allocated to BANK0
   131     000F  118A  2091  118A   	fcall	__pidataBANK0	;fetch initializer
   132     0012  00A8               	movwf	__pdataBANK0& (0+127)
   133                           
   134                           ; Clear objects allocated to BANK0
   135     0013  01A7               	clrf	__pbssBANK0& (0+127)
   136     0014                     end_of_initialization:	
   137                           ;End of C runtime variable initialization code
   138                           
   139     0014                     __end_of__initialization:
   140     0014  0183               	clrf	3
   141     0015  118A  2817         	ljmp	_main	;jump to C main() function
   142                           
   143                           	psect	bssBANK0
   144     0027                     __pbssBANK0:
   145     0027                     _wynik:
   146     0027                     	ds	1
   147                           
   148                           	psect	dataBANK0
   149     0028                     __pdataBANK0:
   150     0028                     _portd_mask:
   151     0028                     	ds	1
   152                           
   153                           	psect	cstackCOMMON
   154     0000                     __pcstackCOMMON:
   155     0000                     ??_IE_ENABLE:
   156                           
   157                           	psect	cstackBANK0
   158     0020                     __pcstackBANK0:	
   159                           ; 1 bytes @ 0x0
   160                           
   161     0020                     ?_SetA_D:
   162     0020                     ?_IE_ENABLE:	
   163                           ; 1 bytes @ 0x0
   164                           
   165     0020                     ?_main:	
   166                           ; 1 bytes @ 0x0
   167                           
   168     0020                     ?_AD_Int:	
   169                           ; 1 bytes @ 0x0
   170                           
   171     0020                     ??_AD_Int:	
   172                           ; 1 bytes @ 0x0
   173                           
   174                           
   175                           ; 1 bytes @ 0x0
   176     0020                     	ds	2
   177     0022                     ??_SetA_D:
   178                           
   179                           ; 1 bytes @ 0x2
   180     0022                     	ds	2
   181     0024                     ??_main:
   182                           
   183                           ; 1 bytes @ 0x4
   184     0024                     	ds	3
   185                           
   186                           	psect	maintext
   187     0017                     __pmaintext:	
   188 ;;
   189 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   190 ;;
   191 ;; *************** function _main *****************
   192 ;; Defined at:
   193 ;;		line 29 in file "main.c"
   194 ;; Parameters:    Size  Location     Type
   195 ;;		None
   196 ;; Auto vars:     Size  Location     Type
   197 ;;		None
   198 ;; Return value:  Size  Location     Type
   199 ;;                  1    wreg      void 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0, pclath, cstack
   202 ;; Tracked objects:
   203 ;;		On entry : B00/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMMON   BANK0   BANK1
   207 ;;      Params:         0       0       0
   208 ;;      Locals:         0       0       0
   209 ;;      Temps:          0       3       0
   210 ;;      Totals:         0       3       0
   211 ;;Total ram usage:        3 bytes
   212 ;; Hardware stack levels required when called: 2
   213 ;; This function calls:
   214 ;;		_IE_ENABLE
   215 ;;		_SetA_D
   216 ;; This function is called by:
   217 ;;		Startup code after reset
   218 ;; This function uses a non-reentrant model
   219 ;;
   220                           
   221     0017                     _main:	
   222                           ;psect for function _main
   223                           
   224     0017                     l565:	
   225                           ;incstack = 0
   226                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   227                           
   228                           
   229                           ;main.c: 31:     SetA_D();
   230     0017  118A  206D  118A   	fcall	_SetA_D
   231     001A                     l567:
   232                           
   233                           ;main.c: 32:     IE_ENABLE();
   234     001A  118A  2088  118A   	fcall	_IE_ENABLE
   235     001D                     l569:
   236                           
   237                           ;main.c: 33:     TRISD = 0;
   238     001D  1683               	bsf	3,5	;RP0=1, select bank1
   239     001E  1303               	bcf	3,6	;RP1=0, select bank1
   240     001F  0188               	clrf	8	;volatile
   241     0020                     l571:
   242                           
   243                           ;main.c: 34:     PORTDbits.RD0 = 0;
   244     0020  1283               	bcf	3,5	;RP0=0, select bank0
   245     0021  1303               	bcf	3,6	;RP1=0, select bank0
   246     0022  1008               	bcf	8,0	;volatile
   247     0023                     l573:
   248                           
   249                           ;main.c: 38:         PORTD = portd_mask;
   250     0023  1283               	bcf	3,5	;RP0=0, select bank0
   251     0024  1303               	bcf	3,6	;RP1=0, select bank0
   252     0025  0828               	movf	_portd_mask,w
   253     0026  0088               	movwf	8	;volatile
   254     0027                     l575:
   255                           
   256                           ;main.c: 39:         portd_mask = (portd_mask << 1) | (portd_mask >> 7);
   257     0027  0828               	movf	_portd_mask,w
   258     0028  00A4               	movwf	??_main
   259     0029  3007               	movlw	7
   260     002A                     u65:
   261     002A  1003               	clrc
   262     002B  0CA4               	rrf	??_main,f
   263     002C  3EFF               	addlw	-1
   264     002D  1D03               	skipz
   265     002E  282A               	goto	u65
   266     002F  0828               	movf	_portd_mask,w
   267     0030  00A5               	movwf	??_main+1
   268     0031  0725               	addwf	??_main+1,w
   269     0032  0424               	iorwf	??_main,w
   270     0033  00A8               	movwf	_portd_mask
   271     0034                     l577:
   272                           
   273                           ;main.c: 40:         _delay((unsigned long)((500)*(4000000/4000.0)));
   274     0034  3003               	movlw	3
   275     0035  1283               	bcf	3,5	;RP0=0, select bank0
   276     0036  1303               	bcf	3,6	;RP1=0, select bank0
   277     0037  00A6               	movwf	??_main+2
   278     0038  308A               	movlw	138
   279     0039  00A5               	movwf	??_main+1
   280     003A  3055               	movlw	85
   281     003B  00A4               	movwf	??_main
   282     003C                     u117:
   283     003C  0BA4               	decfsz	??_main,f
   284     003D  283C               	goto	u117
   285     003E  0BA5               	decfsz	??_main+1,f
   286     003F  283C               	goto	u117
   287     0040  0BA6               	decfsz	??_main+2,f
   288     0041  283C               	goto	u117
   289     0042  0000               	nop
   290     0043  2823               	goto	l573
   291     0044  118A  280D         	ljmp	start
   292     0046                     __end_of_main:
   293                           
   294                           	psect	text1
   295     006D                     __ptext1:	
   296 ;; *************** function _SetA_D *****************
   297 ;; Defined at:
   298 ;;		line 45 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2, status,0
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMMON   BANK0   BANK1
   312 ;;      Params:         0       0       0
   313 ;;      Locals:         0       0       0
   314 ;;      Temps:          0       2       0
   315 ;;      Totals:         0       2       0
   316 ;;Total ram usage:        2 bytes
   317 ;; Hardware stack levels used: 1
   318 ;; Hardware stack levels required when called: 1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326     006D                     _SetA_D:	
   327                           ;psect for function _SetA_D
   328                           
   329     006D                     l553:	
   330                           ;incstack = 0
   331                           ; Regs used in _SetA_D: [wreg+status,2+status,0]
   332                           
   333                           
   334                           ;main.c: 46:     ADCON0 = 0b00000001;
   335     006D  3001               	movlw	1
   336     006E  1283               	bcf	3,5	;RP0=0, select bank0
   337     006F  1303               	bcf	3,6	;RP1=0, select bank0
   338     0070  009F               	movwf	31	;volatile
   339     0071                     l555:
   340                           
   341                           ;main.c: 47:     ADCON0bits.ADCS = 0b01;
   342     0071  081F               	movf	31,w	;volatile
   343     0072  393F               	andlw	-193
   344     0073  3840               	iorlw	64
   345     0074  009F               	movwf	31	;volatile
   346     0075                     l557:
   347                           
   348                           ;main.c: 48:     ADCON1 = 0b00001110;
   349     0075  300E               	movlw	14
   350     0076  1683               	bsf	3,5	;RP0=1, select bank1
   351     0077  1303               	bcf	3,6	;RP1=0, select bank1
   352     0078  009F               	movwf	31	;volatile
   353     0079                     l559:
   354                           
   355                           ;main.c: 49:     ADCON0bits.ADON = 1;
   356     0079  1283               	bcf	3,5	;RP0=0, select bank0
   357     007A  1303               	bcf	3,6	;RP1=0, select bank0
   358     007B  141F               	bsf	31,0	;volatile
   359     007C                     l561:
   360                           
   361                           ;main.c: 50:     _delay((unsigned long)((2)*(4000000/4000.0)));
   362     007C  3003               	movlw	3
   363     007D  1283               	bcf	3,5	;RP0=0, select bank0
   364     007E  1303               	bcf	3,6	;RP1=0, select bank0
   365     007F  00A3               	movwf	??_SetA_D+1
   366     0080  3097               	movlw	151
   367     0081  00A2               	movwf	??_SetA_D
   368     0082                     u127:
   369     0082  0BA2               	decfsz	??_SetA_D,f
   370     0083  2882               	goto	u127
   371     0084  0BA3               	decfsz	??_SetA_D+1,f
   372     0085  2882               	goto	u127
   373     0086  0000               	nop
   374     0087                     l41:
   375     0087  0008               	return
   376     0088                     __end_of_SetA_D:
   377                           
   378                           	psect	text2
   379     0088                     __ptext2:	
   380 ;; *************** function _IE_ENABLE *****************
   381 ;; Defined at:
   382 ;;		line 54 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		None
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1
   396 ;;      Params:         0       0       0
   397 ;;      Locals:         0       0       0
   398 ;;      Temps:          0       0       0
   399 ;;      Totals:         0       0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels used: 1
   402 ;; Hardware stack levels required when called: 1
   403 ;; This function calls:
   404 ;;		Nothing
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410     0088                     _IE_ENABLE:	
   411                           ;psect for function _IE_ENABLE
   412                           
   413     0088                     l563:	
   414                           ;incstack = 0
   415                           ; Regs used in _IE_ENABLE: []
   416                           
   417                           
   418                           ;main.c: 55:     INTCONbits.GIE = 1;
   419     0088  178B               	bsf	11,7	;volatile
   420                           
   421                           ;main.c: 56:     INTCONbits.PEIE = 1;
   422     0089  170B               	bsf	11,6	;volatile
   423                           
   424                           ;main.c: 57:     PIR1bits.ADIF = 0;
   425     008A  1283               	bcf	3,5	;RP0=0, select bank0
   426     008B  1303               	bcf	3,6	;RP1=0, select bank0
   427     008C  130C               	bcf	12,6	;volatile
   428                           
   429                           ;main.c: 58:     PIE1bits.ADIE = 1;
   430     008D  1683               	bsf	3,5	;RP0=1, select bank1
   431     008E  1303               	bcf	3,6	;RP1=0, select bank1
   432     008F  170C               	bsf	12,6	;volatile
   433     0090                     l44:
   434     0090  0008               	return
   435     0091                     __end_of_IE_ENABLE:
   436                           
   437                           	psect	text3
   438     0046                     __ptext3:	
   439 ;; *************** function _AD_Int *****************
   440 ;; Defined at:
   441 ;;		line 62 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON   BANK0   BANK1
   455 ;;      Params:         0       0       0
   456 ;;      Locals:         0       0       0
   457 ;;      Temps:          0       2       0
   458 ;;      Totals:         0       2       0
   459 ;;Total ram usage:        2 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; This function calls:
   462 ;;		Nothing
   463 ;; This function is called by:
   464 ;;		Interrupt level 1
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     0046                     _AD_Int:	
   469                           ;psect for function _AD_Int
   470                           
   471     0046                     i1l579:
   472                           
   473                           ;main.c: 63:     if (PIE1bits.ADIE && PIR1bits.ADIF) {
   474     0046  1683               	bsf	3,5	;RP0=1, select bank1
   475     0047  1303               	bcf	3,6	;RP1=0, select bank1
   476     0048  1F0C               	btfss	12,6	;volatile
   477     0049  284B               	goto	u7_21
   478     004A  284C               	goto	u7_20
   479     004B                     u7_21:
   480     004B  2865               	goto	i1l53
   481     004C                     u7_20:
   482     004C                     i1l581:
   483     004C  1283               	bcf	3,5	;RP0=0, select bank0
   484     004D  1303               	bcf	3,6	;RP1=0, select bank0
   485     004E  1F0C               	btfss	12,6	;volatile
   486     004F  2851               	goto	u8_21
   487     0050  2852               	goto	u8_20
   488     0051                     u8_21:
   489     0051  2865               	goto	i1l53
   490     0052                     u8_20:
   491     0052                     i1l583:
   492                           
   493                           ;main.c: 64:         wynik = ADRES;
   494     0052  081E               	movf	30,w	;volatile
   495     0053  00A7               	movwf	_wynik
   496                           
   497                           ;main.c: 67:         if (wynik < 5) {
   498     0054  3005               	movlw	5
   499     0055  0227               	subwf	_wynik,w
   500     0056  1803               	skipnc
   501     0057  2859               	goto	u9_21
   502     0058  285A               	goto	u9_20
   503     0059                     u9_21:
   504     0059  285C               	goto	i1l587
   505     005A                     u9_20:
   506     005A                     i1l585:
   507                           
   508                           ;main.c: 68:             PORTDbits.RD0 = 1;
   509     005A  1408               	bsf	8,0	;volatile
   510                           
   511                           ;main.c: 69:         } else if (wynik > 10) {
   512     005B  2863               	goto	i1l51
   513     005C                     i1l587:
   514     005C  300B               	movlw	11
   515     005D  0227               	subwf	_wynik,w
   516     005E  1C03               	skipc
   517     005F  2861               	goto	u10_21
   518     0060  2862               	goto	u10_20
   519     0061                     u10_21:
   520     0061  2863               	goto	i1l51
   521     0062                     u10_20:
   522     0062                     i1l589:
   523                           
   524                           ;main.c: 70:             PORTDbits.RD0 = 0;
   525     0062  1008               	bcf	8,0	;volatile
   526     0063                     i1l51:
   527                           
   528                           ;main.c: 73:         PIR1bits.ADIF = 0;
   529     0063  130C               	bcf	12,6	;volatile
   530                           
   531                           ;main.c: 74:         ADCON0bits.GO = 1;
   532     0064  151F               	bsf	31,2	;volatile
   533     0065                     i1l53:
   534     0065  1283               	bcf	3,5	;RP0=0, select bank0
   535     0066  0821               	movf	??_AD_Int+1,w
   536     0067  008A               	movwf	10
   537     0068  0E20               	swapf	??_AD_Int,w
   538     0069  0083               	movwf	3
   539     006A  0EFE               	swapf	btemp,f
   540     006B  0E7E               	swapf	btemp,w
   541     006C  0009               	retfie
   542     006D                     __end_of_AD_Int:
   543     007E                     btemp	set	126	;btemp
   544     007E                     wtemp0	set	126
   545                           
   546                           	psect	intentry
   547     0004                     __pintentry:	
   548                           ;incstack = 0
   549                           ; Regs used in _AD_Int: [wreg]
   550                           
   551     0004                     interrupt_function:
   552     007E                     saved_w	set	btemp
   553     0004  00FE               	movwf	btemp
   554     0005  0E03               	swapf	3,w
   555     0006  1283               	bcf	3,5	;RP0=0, select bank0
   556     0007  1303               	bcf	3,6	;RP1=0, select bank0
   557     0008  00A0               	movwf	??_AD_Int
   558     0009  080A               	movf	10,w
   559     000A  00A1               	movwf	??_AD_Int+1
   560     000B  118A  2846         	ljmp	_AD_Int
   561                           
   562                           	psect	config
   563                           
   564                           ;Config register CONFIG @ 0x2007
   565                           ;	Oscillator Selection bits
   566                           ;	FOSC = XT, XT oscillator
   567                           ;	Watchdog Timer Enable bit
   568                           ;	WDTE = OFF, WDT disabled
   569                           ;	Power-up Timer Enable bit
   570                           ;	PWRTE = OFF, PWRT disabled
   571                           ;	FLASH Program Memory Code Protection bit
   572                           ;	CP = OFF, Code protection off
   573                           ;	Brown-out Reset Enable bit
   574                           ;	BOREN = 0x1, unprogrammed default
   575     2007                     	org	8199
   576     2007  3FF9               	dw	16377

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94      7       9
    BANK1            94      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _AD_Int in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SetA_D

Critical Paths under _AD_Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _AD_Int in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 BANK0      3     3      0
                          _IE_ENABLE
                             _SetA_D
 ---------------------------------------------------------------------------------
 (1) _SetA_D                                               2     2      0       0
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _IE_ENABLE                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _AD_Int                                               2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _IE_ENABLE
   _SetA_D

 _AD_Int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0       0       7        0.0%
BITBANK1            5E      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E      7       9       5        9.6%
BITBANK0            5E      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       9       8        0.0%
ABS                  0      0       9       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Dec 06 17:57:30 2024

                     l41 0087                       l44 0090                       u65 002A  
                    l561 007C                      l553 006D                      l563 0088  
                    l555 0071                      l571 0020                      l557 0075  
                    l573 0023                      l565 0017                      l559 0079  
                    l575 0027                      l567 001A                      l577 0034  
                    l569 001D                      u117 003C                      u127 0082  
                   i1l51 0063                     i1l53 0065                     u7_20 004C  
                   u7_21 004B                     u8_20 0052                     u8_21 0051  
                   u9_20 005A                     u9_21 0059                     _main 0017  
                   btemp 007E                     start 000D                    ?_main 0020  
                  _ADRES 001E                    i1l581 004C                    i1l583 0052  
                  i1l585 005A                    i1l587 005C                    i1l579 0046  
                  i1l589 0062                    u10_20 0062                    u10_21 0061  
                  _PORTD 0008                    _TRISD 0088                    _wynik 0027  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0046                   ??_main 0024  
      __end_of_IE_ENABLE 0091                   _ADCON0 001F                   _ADCON1 009F  
                 _AD_Int 0046                   _SetA_D 006D                   saved_w 007E  
__end_of__initialization 0014           __pcstackCOMMON 0000             __pidataBANK0 0091  
                ?_AD_Int 0020               __pbssBANK0 0027                  ?_SetA_D 0020  
             __pmaintext 0017               __pintentry 0004                  __ptext1 006D  
                __ptext2 0088                  __ptext3 0046                _IE_ENABLE 0088  
   end_of_initialization 0014                _PORTDbits 0008               _portd_mask 0028  
             ?_IE_ENABLE 0020           __end_of_AD_Int 006D           __end_of_SetA_D 0088  
    start_initialization 000F                 ??_AD_Int 0020                 ??_SetA_D 0022  
            __pdataBANK0 0028                ___latbits 0001            __pcstackBANK0 0020  
            ??_IE_ENABLE 0000        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _INTCONbits 000B  
               intlevel1 0000  
